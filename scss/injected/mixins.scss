
@mixin badges () {

    .badge-icon,
    .badge-text {
        color: var(--card-button-color);
    }

    .badge.is-complete,
    .badge.is-unread-notification,
    .badge.is-due-soon,
    .badge.is-due-now,
    .badge.is-due-past {
        background: var(--badge-bg);
        color: var(--card-button-color);
        .badge-icon,
        .badge-text {
            color: var(--card-button-color);
        }
    }

    .badge.is-voted {
        background: var(--badge-bg);
        color: var(--card-button-color);
        .badge-icon,
        .badge-text {
            color: var(--card-button-color);
        }
    }

}

@mixin low () {

	$buttonHover: rgba(0, 0, 0, .1);

	.list-card {

		@include badges();

		.list-card-cover {
			opacity: .4;
		}

	}

}

@mixin ignore () {

	-webkit-filter: grayscale(100%);
	filter: grayscale(100%);

    $textShadow: 1px 1px 0 rgba(255, 255, 255, 0.2);

    .list-header-num-cards,
    .mod-list-name,
    .mod-list-name:disabled {
        text-shadow: $textShadow;
    }

	.open-card-composer {
		text-shadow: $textShadow;
	}

	.list-card {

		@include badges();

        &:not(.placeholder) {

            &:not(.active-card) {
        		a, textarea {
                    opacity: .5;
                    text-shadow: $textShadow;
        		}
            }

        	&.active-card {
            	a, textarea {
                    opacity: .4;
                    text-shadow: $textShadow;
            	}
            }

        }

		.list-card-cover {
			opacity: .1;
		}

		.card-label {
			opacity: .3;
		}

		.member,
        .sticker {
    		opacity: .1;
    	}

        &.is-stickered .list-card-details {
    		background: transparent;
    	}

	}

}
